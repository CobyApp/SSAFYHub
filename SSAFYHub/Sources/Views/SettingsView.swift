import SwiftUI

struct SettingsView: View {
    @Environment(\.dismiss) private var dismiss
    @EnvironmentObject var authViewModel: AuthViewModel
    @StateObject private var themeManager = ThemeManager()
    
    var body: some View {
        NavigationView {
            ScrollView {
                VStack(spacing: AppSpacing.lg) {
                    // ÌîÑÎ°úÌïÑ ÏÑπÏÖò
                    profileSection
                    
                    // ÌÖåÎßà ÏÑ§Ï†ï ÏÑπÏÖò
                    themeSection
                    
                    // Í≥ÑÏ†ï Í¥ÄÎ¶¨ ÏÑπÏÖò
                    accountSection
                    
                    // Ïï± Ï†ïÎ≥¥ ÏÑπÏÖò
                    appInfoSection
                }
                .padding(AppSpacing.md)
            }
            .background(AppColors.background)
            .navigationTitle("ÏÑ§Ï†ï")
            .navigationBarTitleDisplayMode(.large)
            .toolbar {
                ToolbarItem(placement: .navigationBarLeading) {
                    Button("Ï∑®ÏÜå") {
                        dismiss()
                    }
                    .font(AppTypography.subheadline)
                    .foregroundColor(AppColors.textSecondary)
                }
                
                ToolbarItem(placement: .navigationBarTrailing) {
                    Button("ÏôÑÎ£å") {
                        dismiss()
                    }
                    .font(AppTypography.headline)
                    .foregroundColor(AppColors.primary)
                    .fontWeight(.semibold)
                }
            }
            .onAppear {
                print("üîç SettingsView onAppear")
                print("üîç currentUser: \(String(describing: authViewModel.currentUser))")
                print("üîç authState: \(authViewModel.authState)")
                if let user = authViewModel.currentUser {
                    print("üîç userType: \(user.userType)")
                    print("üîç isGuest: \(user.isGuest)")
                }
            }
        }
        .environmentObject(themeManager)
    }
    
    // MARK: - Profile Section
    private var profileSection: some View {
        VStack(spacing: AppSpacing.md) {
            HStack {
                Image(systemName: "person.circle.fill")
                    .font(.system(size: 60))
                    .foregroundColor(AppColors.primary)
                
                VStack(alignment: .leading, spacing: AppSpacing.xs) {
                    Text(authViewModel.currentUser?.email ?? "ÏÇ¨Ïö©Ïûê")
                        .font(AppTypography.headline)
                        .foregroundColor(AppColors.textPrimary)
                    
                    Text("Í∞ÄÏûÖÏùº: \(authViewModel.currentUser?.createdAt.formatted(date: .abbreviated, time: .omitted) ?? "ÎÇ†Ïßú ÏóÜÏùå")")
                        .font(AppTypography.caption1)
                        .foregroundColor(AppColors.textSecondary)
                    
                    HStack {
                        Image(systemName: authViewModel.currentUser?.isGuest == true ? "person.badge.plus" : "checkmark.seal.fill")
                            .foregroundColor(authViewModel.currentUser?.isGuest == true ? AppColors.warning : AppColors.success)
                        
                        Text(authViewModel.currentUser?.isGuest == true ? "Í≤åÏä§Ìä∏ ÏÇ¨Ïö©Ïûê" : "Ïù∏Ï¶ùÎêú ÏÇ¨Ïö©Ïûê")
                            .font(AppTypography.caption1)
                            .foregroundColor(authViewModel.currentUser?.isGuest == true ? AppColors.warning : AppColors.success)
                    }
                }
                
                Spacer()
            }
            .padding(AppSpacing.md)
            .background(AppColors.backgroundSecondary)
            .cornerRadius(AppCornerRadius.medium)
        }
    }
    
    // MARK: - Theme Section
    private var themeSection: some View {
        VStack(alignment: .leading, spacing: AppSpacing.md) {
            Text("ÌÖåÎßà ÏÑ§Ï†ï")
                .font(AppTypography.title3)
                .foregroundColor(AppColors.textPrimary)
            
            HStack {
                Image(systemName: "paintbrush.fill")
                    .foregroundColor(AppColors.primary)
                    .frame(width: 24)
                
                Text("Îã§ÌÅ¨ Î™®Îìú")
                    .font(AppTypography.body)
                    .foregroundColor(AppColors.textPrimary)
                
                Spacer()
                
                Toggle("", isOn: $themeManager.isDarkMode)
                    .toggleStyle(SwitchToggleStyle(tint: AppColors.primary))
            }
            .padding(AppSpacing.md)
            .background(AppColors.backgroundSecondary)
            .cornerRadius(AppCornerRadius.medium)
        }
    }
    
    // MARK: - Account Section
    private var accountSection: some View {
        VStack(alignment: .leading, spacing: AppSpacing.md) {
            Text("Í≥ÑÏ†ï Í¥ÄÎ¶¨")
                .font(AppTypography.title3)
                .foregroundColor(AppColors.textPrimary)
            
            VStack(spacing: AppSpacing.sm) {
                Button(action: {
                    // Ï∫†ÌçºÏä§ Î≥ÄÍ≤Ω Î°úÏßÅ
                }) {
                    HStack {
                        Image(systemName: "building.2.fill")
                            .foregroundColor(AppColors.primary)
                            .frame(width: 24)
                        
                        Text("Ï∫†ÌçºÏä§ Î≥ÄÍ≤Ω")
                            .font(AppTypography.body)
                            .foregroundColor(AppColors.textPrimary)
                        
                        Spacer()
                        
                        Image(systemName: "chevron.right")
                            .foregroundColor(AppColors.textTertiary)
                            .font(.caption)
                    }
                    .padding(AppSpacing.md)
                    .background(AppColors.backgroundSecondary)
                    .cornerRadius(AppCornerRadius.medium)
                }
                
                Button(action: {
                    if let currentUser = authViewModel.currentUser, currentUser.isGuest {
                        // Í≤åÏä§Ìä∏ Î™®Îìú ÎÇòÍ∞ÄÍ∏∞
                        authViewModel.exitGuestMode()
                        dismiss()
                    } else {
                        // Ïù∏Ï¶ùÎêú ÏÇ¨Ïö©Ïûê Î°úÍ∑∏ÏïÑÏõÉ
                        Task {
                            await authViewModel.signOut()
                            dismiss()
                        }
                    }
                }) {
                    HStack {
                        Image(systemName: authViewModel.currentUser?.isGuest == true ? "xmark.circle" : "rectangle.portrait.and.arrow.right")
                            .foregroundColor(authViewModel.currentUser?.isGuest == true ? AppColors.textSecondary : AppColors.error)
                            .frame(width: 24)
                        
                        Text(authViewModel.currentUser?.isGuest == true ? "ÎÇòÍ∞ÄÍ∏∞" : "Î°úÍ∑∏ÏïÑÏõÉ")
                            .font(AppTypography.body)
                            .foregroundColor(authViewModel.currentUser?.isGuest == true ? AppColors.textSecondary : AppColors.error)
                        
                        Spacer()
                    }
                    .padding(AppSpacing.md)
                    .background(AppColors.backgroundSecondary)
                    .cornerRadius(AppCornerRadius.medium)
                }
            }
        }
    }
    
    // MARK: - App Info Section
    private var appInfoSection: some View {
        VStack(alignment: .leading, spacing: AppSpacing.md) {
            Text("Ïï± Ï†ïÎ≥¥")
                .font(AppTypography.title3)
                .foregroundColor(AppColors.textPrimary)
            
            VStack(spacing: AppSpacing.sm) {
                HStack {
                    Image(systemName: "info.circle.fill")
                        .foregroundColor(AppColors.primary)
                        .frame(width: 24)
                    
                    Text("Î≤ÑÏ†Ñ")
                        .font(AppTypography.body)
                        .foregroundColor(AppColors.textPrimary)
                    
                    Spacer()
                    
                    Text("1.0.0")
                        .font(AppTypography.body)
                        .foregroundColor(AppColors.textSecondary)
                }
                .padding(AppSpacing.md)
                .background(AppColors.backgroundSecondary)
                .cornerRadius(AppCornerRadius.medium)
                
                HStack {
                    Image(systemName: "globe")
                        .foregroundColor(AppColors.primary)
                        .frame(width: 24)
                    
                    Text("Í∞úÎ∞úÏûê")
                        .font(AppTypography.body)
                        .foregroundColor(AppColors.textPrimary)
                    
                    Spacer()
                    
                    Text("SSAFY")
                        .font(AppTypography.body)
                        .foregroundColor(AppColors.textSecondary)
                }
                .padding(AppSpacing.md)
                .background(AppColors.backgroundSecondary)
                .cornerRadius(AppCornerRadius.medium)
            }
        }
    }
}

#Preview {
    SettingsView()
        .environmentObject(AuthViewModel())
}

